name: Docs to PDF

on:
  workflow_dispatch:
  # Uncomment this section if you want the action to run on push to the main branch
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'docs/**.md'
  #     - 'docs/images/**'

jobs:
  converttopdf:
    name: Build PDF
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # - uses: baileyjm02/markdown-to-pdf@v1
      #   with:
      #     input_dir: docs
      #     output_dir: pdfs
      #     images_dir: docs/images
      #     image_import: ./images
      #     build_html: false
      - uses: actions/upload-artifact@v3
        with:
          name: markdown
          path: docs

  create-release:
    name: Create Release with Random Tag
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository to access files
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Generate a random tag (using current timestamp)
      - name: Generate random tag
        id: random_tag
        run: echo "TAG=v$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      # Step 3: Upload the "markdown" folder as an artifact
      - name: Upload markdown folder as artifact
        uses: actions/upload-artifact@v3
        with:
          name: markdown  # The name of the artifact in the UI
          path: markdown  # Path to the folder you want to upload

      # Step 4: Create a GitHub Release with the random tag
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}  # Use the random tag generated above
          release_name: "Release ${{ env.TAG }}"
          body: "Automated release with random tag."
          draft: false
          prerelease: false

      # Step 5: Attach the markdown artifact to the release
      - name: Upload markdown to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: markdown
          asset_name: markdown.zip  # Rename as needed
          asset_content_type: application/zip